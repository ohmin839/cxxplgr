#define BOOST_TEST_MODULE test_to_upper

#include <string>

#include <boost/test/included/unit_test.hpp>
#include <boost/test/data/test_case.hpp>
#include <boost/test/data/monomorphic.hpp>

#include "cxxplgr/secondary.hpp"

typedef std::pair<std::string, std::string> fixture_t;
const fixture_t fixtures[] =
{
    {"β", "Β"},
    {"γ", "Γ"},
    {"δ", "Δ"},
    {"ζ", "Ζ"},
    {"θ", "Θ"},
    {"κ", "Κ"},
    {"λ", "Λ"},
    {"μ", "Μ"},
    {"ν", "Ν"},
    {"ξ", "Ξ"},
    {"π", "Π"},
    {"ς", "Σ"},
    {"σ", "Σ"},
    {"τ", "Τ"},
    {"φ", "Φ"},
    {"χ", "Χ"},
    {"ψ", "Ψ"},
    {"α", "Α"},
    {"ᾳ", "ᾼ"},
    {"ά", "Ά"},
    {"ὰ", "Ὰ"},
    {"ἁ", "Ἁ"},
    {"ᾁ", "ᾉ"},
    {"ἅ", "Ἅ"},
    {"ᾅ", "ᾍ"},
    {"ἃ", "ᾍ"},
    {"ᾃ", "ᾍ"},
    {"ἇ", "Ἇ"},
    {"ᾇ", "ᾏ"},
    {"ἀ", "Ἀ"},
    {"ᾀ", "ᾈ"},
    {"ἄ", "Ἄ"},
    {"ᾄ", "ᾌ"},
    {"ἂ", "Ἂ"},
    {"ᾂ", "ᾊ"},
    {"ἆ", "Ἆ"},
    {"ᾆ", "ᾎ"},
    {"ε", "Ε"},
    {"έ", "Έ"},
    {"ὲ", "Ὲ"},
    {"ἑ", "Ἑ"},
    {"ἕ", "Ἕ"},
    {"ἓ", "Ἓ"},
    {"ἐ", "Ἐ"},
    {"ἔ", "Ἔ"},
    {"ἒ", "Ἒ"},
    {"η", "Η"},
    {"ῃ", "ῌ"},
    {"ή", "Ή"},
    {"ὴ", "Ὴ"},
    {"ἡ", "Ἡ"},
    {"ᾑ", "ᾙ"},
    {"ἥ", "Ἥ"},
    {"ᾕ", "ᾝ"},
    {"ἣ", "Ἣ"},
    {"ᾓ", "ᾛ"},
    {"ἧ", "Ἧ"},
    {"ᾗ", "ᾟ"},
    {"ἠ", "Ἠ"},
    {"ᾐ", "ᾘ"},
    {"ἤ", "Ἤ"},
    {"ᾔ", "ᾜ"},
    {"ἢ", "Ἢ"},
    {"ᾒ", "ᾚ"},
    {"ἦ", "Ἦ"},
    {"ᾖ", "ᾞ"},
    {"ι", "Ι"},
    {"ί", "Ί"},
    {"ὶ", "Ὶ"},
    {"ἱ", "Ἱ"},
    {"ἵ", "Ἵ"},
    {"ἳ", "Ἳ"},
    {"ἷ", "Ἷ"},
    {"ἰ", "Ἰ"},
    {"ἴ", "Ἴ"},
    {"ἲ", "Ἲ"},
    {"ἶ", "Ἶ"},
    {"ϊ", "Ϊ"},
    {"ο", "Ο"},
    {"ό", "Ό"},
    {"ὸ", "Ὸ"},
    {"ὁ", "Ὁ"},
    {"ὅ", "Ὅ"},
    {"ὃ", "Ὃ"},
    {"ὀ", "Ὀ"},
    {"ὄ", "Ὄ"},
    {"ὂ", "Ὂ"},
    {"ρ", "Ρ"},
    {"ῥ", "Ῥ"},
    {"υ", "Υ"},
    {"ύ", "Ύ"},
    {"ὺ", "Ὺ"},
    {"ὑ", "Ὑ"},
    {"ὕ", "Ὕ"},
    {"ὓ", "Ὓ"},
    {"ὗ", "Ὗ"},
    {"ϋ", "Ϋ"},
    {"ω", "Ω"},
    {"ῳ", "ῼ"},
    {"ώ", "Ώ"},
    {"ὼ", "Ὼ"},
    {"ὡ", "Ὡ"},
    {"ᾡ", "ᾩ"},
    {"ὥ", "Ὥ"},
    {"ᾥ", "ᾭ"},
    {"ὣ", "Ὣ"},
    {"ᾣ", "ᾫ"},
    {"ὧ", "Ὧ"},
    {"ᾧ", "ᾯ"},
    {"ὠ", "Ὠ"},
    {"ᾠ", "ᾨ"},
    {"ὤ", "Ὤ"},
    {"ᾤ", "ᾬ"},
    {"ὢ", "Ὢ"},
    {"ᾢ", "ᾪ"},
    {"ὦ", "Ὦ"},
    {"ᾦ", "ᾮ"},
    {"0", "0"}
};

namespace bdata = boost::unit_test::data;

BOOST_TEST_DONT_PRINT_LOG_VALUE(fixture_t)

BOOST_DATA_TEST_CASE(
    test_to_upper,
    bdata::make(fixtures),
    arg)
{
    using cxxplgr::secondary::to_upper;

    std::string input = arg.first;
    std::string expected = arg.second;
    std::string actual = to_upper(input);

    BOOST_TEST(actual == expected);
}

